reload page after login/logout
OR
update local storage to match newly logged usr after login
  FIXED: created storage.js in utils which stored functions for saving loading and loging out user
  local storage. This was then usd in blogs.js service to load the token in there rather than setting
  it in useEffect. 

cut out BlogList component.

Exercises 7.9.-7.21.
7.9: redux, step1
Refactor the application from using internal React component state to using Redux for the application's state management.

Change the application's notifications to use Redux at this point of the exercise set.

7.10: redux, step2
Note that this and the next two exercises are quite laborious but incredibly educational.

Store the information about blog posts in the Redux store. In this exercise it is enough that you can see the blogs in backend and create a new blog.

You are free to manage the state for logging in and creating new blog posts by using the internal state of React components.

7.11: redux, step3
Expand your solution so that it is again possible to like and delete a blog.

7.12: redux, step4
Store the information about the signed in user in the Redux store.

